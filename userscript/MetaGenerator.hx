package userscript;

import haxe.macro.Expr;

class MetaGenerator
{
    private var meta:Metadata;

    public function new(meta:Metadata)
    {
        this.meta = meta;
    }

    private function get_string_value(e:ExprDef):String
    {
        switch (e) {
            case EConst(c):
                switch (c) {
                    case CString(val):
                        return val;
                    default:
                }
            default:
        }

        return null;
    }

    private function get_values(e:ExprDef):Array<String>
    {
        var out:Array<String> = new Array();

        switch (e) {
            case EConst(c):
                switch (c) {
                    case CString(val):
                        return [val];
                    default:
                }
            case EArrayDecl(a):
                for (val in a) {
                    out.push(this.get_string_value(val.expr));
                }
            default:
        }

        return out;
    }

    public function generate()
    {
        var out = "// ==UserScript==\n";

        for (m in this.meta) {
            var name:String = m.name;

            if (!Lambda.has(Constants.USERSCRIPT_VARIABLES, name))
                continue;

            for (p in m.params) {
                var values = this.get_values(p.expr);
                for (value in values) {
                    out += "// @" + name + " " + value + "\n";
                }
            }
        }

        out += "// ==/UserScript==\n\n";

        out += "// THIS FILE IS AUTOGENERATED, PLEASE DO NOT MODIFY!\n";
        out += "// If you want to make changes, please look into the\n";
        out += "// UserScript block above to get more information on\n";
        out += "// how to obtain the source code or make changes.\n";

        return out;
    }
}
